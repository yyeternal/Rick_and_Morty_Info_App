{"version":3,"sources":["../../../../src/utils/remote-build-cache-providers/eas.ts"],"sourcesContent":["import { CalculateFingerprintHashProps, RemoteBuildCachePlugin, RunOptions } from '@expo/config';\nimport { ModPlatform } from '@expo/config-plugins';\nimport spawnAsync from '@expo/spawn-async';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\n\nimport { isDevClientBuild } from './helpers';\nimport { Log } from '../../log';\nimport { isSpawnResultError } from '../../start/platforms/ios/xcrun';\n\nconst debug = require('debug')('expo:eas-remote-build-cache') as typeof console.log;\n\nexport async function resolveEASRemoteBuildCache({\n  projectRoot,\n  platform,\n  fingerprintHash,\n  runOptions,\n}: {\n  projectRoot: string;\n  platform: ModPlatform;\n  fingerprintHash: string;\n  runOptions: RunOptions;\n}): Promise<string | null> {\n  const easJsonPath = path.join(projectRoot, 'eas.json');\n  if (!fs.existsSync(easJsonPath)) {\n    debug('eas.json not found, skip checking for remote builds');\n    return null;\n  }\n\n  Log.log(\n    chalk`{whiteBright \\u203A} {bold Searching builds with matching fingerprint on EAS servers}`\n  );\n  try {\n    const results = await spawnAsync(\n      'npx',\n      [\n        'eas-cli',\n        'build:download',\n        `--platform=${platform}`,\n        `--fingerprint=${fingerprintHash}`,\n        '--non-interactive',\n        isDevClientBuild({ runOptions, projectRoot }) ? '--dev-client' : '--no-dev-client',\n        '--json',\n      ],\n      {\n        cwd: projectRoot,\n      }\n    );\n\n    Log.log(chalk`{whiteBright \\u203A} {bold Successfully downloaded cached build}`);\n    // {\n    //   \"path\": \"/var/folders/03/lppcpcnn61q3mz5ckzmzd8w80000gn/T/eas-cli-nodejs/eas-build-run-cache/c0f9ba9c-0cf1-4c5c-8566-b28b7971050f_22f1bbfa-1c09-4b67-9e4a-721906546b58.app\"\n    // }\n    const json = JSON.parse(results.stdout.trim());\n    return json?.path;\n  } catch (error) {\n    debug('eas-cli error:', error);\n    // @TODO(2025-04-11): remove this in a future release\n    if (isSpawnResultError(error) && error.stderr.includes('command build:download not found')) {\n      Log.warn(\n        `To take advantage of remote build cache, upgrade your eas-cli installation to latest.`\n      );\n    }\n    return null;\n  }\n}\n\nexport async function uploadEASRemoteBuildCache({\n  projectRoot,\n  platform,\n  fingerprintHash,\n  buildPath,\n}: {\n  projectRoot: string;\n  runOptions: RunOptions;\n  platform: ModPlatform;\n  fingerprintHash: string;\n  buildPath?: string;\n}) {\n  const easJsonPath = path.join(projectRoot, 'eas.json');\n  if (!fs.existsSync(easJsonPath)) {\n    debug('eas.json not found, skip uploading builds');\n    return null;\n  }\n\n  try {\n    Log.log(chalk`{whiteBright \\u203A} {bold Uploading build to remote cache}`);\n    const results = await spawnAsync(\n      'npx',\n      [\n        'eas-cli',\n        'upload',\n        `--platform=${platform}`,\n        `--fingerprint=${fingerprintHash}`,\n        buildPath ? `--build-path=${buildPath}` : '',\n        '--non-interactive',\n        '--json',\n      ],\n      {\n        cwd: projectRoot,\n      }\n    );\n    // {\n    //   \"url\": \"/var/folders/03/lppcpcnn61q3mz5ckzmzd8w80000gn/T/eas-cli-nodejs/eas-build-run-cache/c0f9ba9c-0cf1-4c5c-8566-b28b7971050f_22f1bbfa-1c09-4b67-9e4a-721906546b58.app\"\n    // }\n    const json = JSON.parse(results.stdout.trim());\n    Log.log(chalk`{whiteBright \\u203A} {bold Build successfully uploaded: ${json?.url}}`);\n    return json?.url;\n  } catch (error) {\n    debug('eas-cli error:', error);\n  }\n  return null;\n}\n\nexport async function calculateEASFingerprintHashAsync({\n  projectRoot,\n  platform,\n}: CalculateFingerprintHashProps): Promise<string | null> {\n  // prefer using `eas fingerprint:generate` because it automatically upload sources\n  try {\n    const results = await spawnAsync(\n      'npx',\n      ['eas-cli', 'fingerprint:generate', `--platform=${platform}`, '--json', '--non-interactive'],\n      {\n        cwd: projectRoot,\n      }\n    );\n    // {\n    //   \"hash\": \"203f960b965e154b77dc31c6c42e5582e8d77196\"\n    // }\n    const json = JSON.parse(results.stdout.trim());\n    return json?.hash;\n  } catch (error) {\n    debug('eas-cli error:', error);\n  }\n  return null;\n}\n\nexport const EASRemoteBuildCacheProvider: RemoteBuildCachePlugin = {\n  resolveRemoteBuildCache: resolveEASRemoteBuildCache,\n  uploadRemoteBuildCache: uploadEASRemoteBuildCache,\n  calculateFingerprintHash: calculateEASFingerprintHashAsync,\n};\n"],"names":["EASRemoteBuildCacheProvider","calculateEASFingerprintHashAsync","resolveEASRemoteBuildCache","uploadEASRemoteBuildCache","debug","require","projectRoot","platform","fingerprintHash","runOptions","easJsonPath","path","join","fs","existsSync","Log","log","chalk","results","spawnAsync","isDevClientBuild","cwd","json","JSON","parse","stdout","trim","error","isSpawnResultError","stderr","includes","warn","buildPath","url","hash","resolveRemoteBuildCache","uploadRemoteBuildCache","calculateFingerprintHash"],"mappings":"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"}