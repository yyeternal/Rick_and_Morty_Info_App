{"version":3,"sources":["../../../../src/utils/remote-build-cache-providers/index.ts"],"sourcesContent":["import {\n  ExpoConfig,\n  RemoteBuildCachePlugin,\n  RemoteBuildCacheProvider,\n  RunOptions,\n} from '@expo/config';\nimport resolveFrom from 'resolve-from';\n\nimport { EASRemoteBuildCacheProvider } from './eas';\nimport { moduleNameIsDirectFileReference, moduleNameIsPackageReference } from './helpers';\n\nconst debug = require('debug')('expo:run:remote-build') as typeof console.log;\n\nexport const resolveRemoteBuildCacheProvider = (\n  provider:\n    | Required<Required<ExpoConfig>['experiments']>['remoteBuildCache']['provider']\n    | undefined,\n  projectRoot: string\n): RemoteBuildCacheProvider | undefined => {\n  if (!provider) {\n    return;\n  }\n\n  if (provider === 'eas') {\n    return { plugin: EASRemoteBuildCacheProvider, options: {} };\n  }\n\n  if (typeof provider === 'object' && typeof provider.plugin === 'string') {\n    const plugin = resolvePluginFunction(projectRoot, provider.plugin);\n\n    return { plugin, options: provider.options };\n  }\n\n  throw new Error('Invalid remote build cache provider');\n};\n\nexport async function resolveRemoteBuildCache({\n  projectRoot,\n  platform,\n  provider,\n  runOptions,\n}: {\n  projectRoot: string;\n  platform: 'android' | 'ios';\n  provider: RemoteBuildCacheProvider;\n  runOptions: RunOptions;\n}): Promise<string | null> {\n  const fingerprintHash = await calculateFingerprintHashAsync({\n    projectRoot,\n    platform,\n    provider,\n    runOptions,\n  });\n  if (!fingerprintHash) {\n    return null;\n  }\n\n  return await provider.plugin.resolveRemoteBuildCache(\n    { fingerprintHash, platform, runOptions, projectRoot },\n    provider.options\n  );\n}\n\nexport async function uploadRemoteBuildCache({\n  projectRoot,\n  platform,\n  provider,\n  buildPath,\n  runOptions,\n}: {\n  projectRoot: string;\n  platform: 'android' | 'ios';\n  provider: RemoteBuildCacheProvider;\n  buildPath: string;\n  runOptions: RunOptions;\n}): Promise<void> {\n  const fingerprintHash = await calculateFingerprintHashAsync({\n    projectRoot,\n    platform,\n    provider,\n    runOptions,\n  });\n  if (!fingerprintHash) {\n    debug('No fingerprint hash found, skipping upload');\n    return;\n  }\n\n  await provider.plugin.uploadRemoteBuildCache(\n    {\n      projectRoot,\n      platform,\n      fingerprintHash,\n      buildPath,\n      runOptions,\n    },\n    provider.options\n  );\n}\n\nasync function calculateFingerprintHashAsync({\n  projectRoot,\n  platform,\n  provider,\n  runOptions,\n}: {\n  projectRoot: string;\n  platform: 'android' | 'ios';\n  provider: RemoteBuildCacheProvider;\n  runOptions: RunOptions;\n}): Promise<string | null> {\n  if (provider.plugin.calculateFingerprintHash) {\n    return await provider.plugin.calculateFingerprintHash(\n      { projectRoot, platform, runOptions },\n      provider.options\n    );\n  }\n\n  const Fingerprint = importFingerprintForDev(projectRoot);\n  if (!Fingerprint) {\n    debug('@expo/fingerprint is not installed in the project, unable to calculate fingerprint');\n    return null;\n  }\n  const fingerprint = await Fingerprint.createFingerprintAsync(projectRoot);\n\n  return fingerprint.hash;\n}\n\nfunction importFingerprintForDev(projectRoot: string): null | typeof import('@expo/fingerprint') {\n  try {\n    return require(require.resolve('@expo/fingerprint', { paths: [projectRoot] }));\n  } catch {\n    return null;\n  }\n}\n\n/**\n * Resolve the provider plugin from a node module or package.\n * If the module or package does not include a provider plugin, this function throws.\n * The resolution is done in following order:\n *   1. Is the reference a relative file path or an import specifier with file path? e.g. `./file.js`, `pkg/file.js` or `@org/pkg/file.js`?\n *     - Resolve the provider plugin as-is\n *   2. Does the module have a valid provider plugin in the `main` field?\n *     - Resolve the `main` entry point as provider plugin\n */\nfunction resolvePluginFilePathForModule(projectRoot: string, pluginReference: string) {\n  if (moduleNameIsDirectFileReference(pluginReference)) {\n    // Only resolve `./file.js`, `package/file.js`, `@org/package/file.js`\n    const pluginScriptFile = resolveFrom.silent(projectRoot, pluginReference);\n    if (pluginScriptFile) {\n      return pluginScriptFile;\n    }\n  } else if (moduleNameIsPackageReference(pluginReference)) {\n    // Try to resole the `main` entry as config plugin\n    const packageMainEntry = resolveFrom.silent(projectRoot, pluginReference);\n    if (packageMainEntry) {\n      return packageMainEntry;\n    }\n  }\n\n  throw new Error(\n    `Failed to resolve provider plugin for module \"${pluginReference}\" relative to \"${projectRoot}\". Do you have node modules installed?`\n  );\n}\n\n// Resolve the module function and assert type\nexport function resolvePluginFunction(\n  projectRoot: string,\n  pluginReference: string\n): RemoteBuildCachePlugin {\n  const pluginFile = resolvePluginFilePathForModule(projectRoot, pluginReference);\n\n  try {\n    let plugin = require(pluginFile);\n    if (plugin?.default != null) {\n      plugin = plugin.default;\n    }\n\n    if (\n      typeof plugin !== 'object' ||\n      typeof plugin.resolveRemoteBuildCache !== 'function' ||\n      typeof plugin.uploadRemoteBuildCache !== 'function'\n    ) {\n      throw new Error(`\n        The provider plugin \"${pluginReference}\" must export an object containing\n        the resolveRemoteBuildCache and uploadRemoteBuildCache functions.\n      `);\n    }\n    return plugin;\n  } catch (error) {\n    if (error instanceof SyntaxError) {\n      // Add error linking to the docs of how create a valid provider plugin\n    }\n    throw error;\n  }\n}\n"],"names":["resolvePluginFunction","resolveRemoteBuildCache","resolveRemoteBuildCacheProvider","uploadRemoteBuildCache","debug","require","provider","projectRoot","plugin","EASRemoteBuildCacheProvider","options","Error","platform","runOptions","fingerprintHash","calculateFingerprintHashAsync","buildPath","calculateFingerprintHash","Fingerprint","importFingerprintForDev","fingerprint","createFingerprintAsync","hash","resolve","paths","resolvePluginFilePathForModule","pluginReference","moduleNameIsDirectFileReference","pluginScriptFile","resolveFrom","silent","moduleNameIsPackageReference","packageMainEntry","pluginFile","default","error","SyntaxError"],"mappings":"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"}